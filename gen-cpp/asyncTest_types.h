/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef asyncTest_TYPES_H
#define asyncTest_TYPES_H

#include <iosfwd>

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>

#include <thrift/cxxfunctional.h>


namespace thrift { namespace example {

class twitterReturnStruct;

typedef struct _twitterReturnStruct__isset {
  _twitterReturnStruct__isset() : strMethod(false), strSend(false), strGet(false) {}
  bool strMethod :1;
  bool strSend :1;
  bool strGet :1;
} _twitterReturnStruct__isset;

class twitterReturnStruct {
 public:

  static const char* ascii_fingerprint; // = "AB879940BD15B6B25691265F7384B271";
  static const uint8_t binary_fingerprint[16]; // = {0xAB,0x87,0x99,0x40,0xBD,0x15,0xB6,0xB2,0x56,0x91,0x26,0x5F,0x73,0x84,0xB2,0x71};

  twitterReturnStruct(const twitterReturnStruct&);
  twitterReturnStruct& operator=(const twitterReturnStruct&);
  twitterReturnStruct() : strMethod(), strSend(), strGet() {
  }

  virtual ~twitterReturnStruct() throw();
  std::string strMethod;
  std::string strSend;
  std::string strGet;

  _twitterReturnStruct__isset __isset;

  void __set_strMethod(const std::string& val);

  void __set_strSend(const std::string& val);

  void __set_strGet(const std::string& val);

  bool operator == (const twitterReturnStruct & rhs) const
  {
    if (!(strMethod == rhs.strMethod))
      return false;
    if (!(strSend == rhs.strSend))
      return false;
    if (!(strGet == rhs.strGet))
      return false;
    return true;
  }
  bool operator != (const twitterReturnStruct &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const twitterReturnStruct & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const twitterReturnStruct& obj);
};

void swap(twitterReturnStruct &a, twitterReturnStruct &b);

}} // namespace

#endif
